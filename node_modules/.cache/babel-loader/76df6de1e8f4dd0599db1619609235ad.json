{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { createSlice } from '@reduxjs/toolkit';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\nimport { fetchPosts } from '../../api';\nexport const getPosts = _s(createAsyncThunk(\"api/getPosts\", _s(async () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const data = await fetchPosts();\n  dispatch({\n    type: 'FETCH_ALL',\n    payload: data\n  });\n}, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n})), \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\nexport const postsSlice = createSlice({\n  name: 'posts',\n  initialState: {\n    posts: []\n  },\n  reducers: {\n    getPosts: (state, action) => {\n      switch (action.type) {\n        case 'FETCH_ALL':\n          {\n            let oldPosts = state.posts;\n            oldPosts.push(action.payload);\n          }\n\n        case 'CREATE':\n          return state;\n\n        default:\n          return state;\n      }\n    }\n  }\n});\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","useDispatch","fetchPosts","getPosts","dispatch","data","type","payload","postsSlice","name","initialState","posts","reducers","state","action","oldPosts","push","reducer"],"sources":["D:/node/social-media-app/client/src/components/Posts/PostsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchPosts } from '../../api';\r\n\r\nexport const getPosts = createAsyncThunk(\r\n    \"api/getPosts\",\r\n    async () => {\r\n        const dispatch = useDispatch();\r\n        const data = await fetchPosts();\r\n        dispatch({ type: 'FETCH_ALL', payload: data});\r\n    }\r\n);\r\n  \r\n\r\nexport const postsSlice = createSlice({\r\n  name: 'posts',\r\n  initialState: {\r\n    posts: [],\r\n  },\r\n  reducers: {\r\n     getPosts: (state, action) => {\r\n        switch(action.type) {\r\n            case 'FETCH_ALL': {\r\n                let oldPosts = state.posts;\r\n                oldPosts.push(action.payload);\r\n            }\r\n            case 'CREATE':\r\n                return state;\r\n            default:\r\n                return state;    \r\n            }\r\n    }\r\n  }\r\n})\r\n\r\n\r\nexport default postsSlice.reducer"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,WAA3B;AAEA,OAAO,MAAMC,QAAQ,MAAGH,gBAAgB,CACpC,cADoC,KAEpC,YAAY;EAAA;;EACR,MAAMI,QAAQ,GAAGH,WAAW,EAA5B;EACA,MAAMI,IAAI,GAAG,MAAMH,UAAU,EAA7B;EACAE,QAAQ,CAAC;IAAEE,IAAI,EAAE,WAAR;IAAqBC,OAAO,EAAEF;EAA9B,CAAD,CAAR;AACH,CANmC;EAAA,QAGfJ,WAHe;AAAA,GAAnB;EAAA,QAGIA,WAHJ;AAAA,EAAd;AAUP,OAAO,MAAMO,UAAU,GAAGT,WAAW,CAAC;EACpCU,IAAI,EAAE,OAD8B;EAEpCC,YAAY,EAAE;IACZC,KAAK,EAAE;EADK,CAFsB;EAKpCC,QAAQ,EAAE;IACPT,QAAQ,EAAE,CAACU,KAAD,EAAQC,MAAR,KAAmB;MAC1B,QAAOA,MAAM,CAACR,IAAd;QACI,KAAK,WAAL;UAAkB;YACd,IAAIS,QAAQ,GAAGF,KAAK,CAACF,KAArB;YACAI,QAAQ,CAACC,IAAT,CAAcF,MAAM,CAACP,OAArB;UACH;;QACD,KAAK,QAAL;UACI,OAAOM,KAAP;;QACJ;UACI,OAAOA,KAAP;MARR;IAUH;EAZO;AAL0B,CAAD,CAA9B;AAsBP,eAAeL,UAAU,CAACS,OAA1B"},"metadata":{},"sourceType":"module"}