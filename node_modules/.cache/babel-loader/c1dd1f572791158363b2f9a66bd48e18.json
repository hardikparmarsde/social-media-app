{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst PostSlice = createSlice({\n  name: \"posts\",\n  initialState: {\n    posts: []\n  },\n  reducers: {\n    getPostsReducer(state, action) {\n      state.posts = action.payload;\n    },\n\n    createPostReducer(state, action) {\n      state.posts.push(action.payload);\n    },\n\n    updatePostReducer(state, action) {\n      state.posts.map(post => post._id === action.payload._id ? action.payload : post);\n    },\n\n    deletePostReducer(state, action) {\n      //            state.posts.filter((post) => post._id  !== action.payload.id)\n      state.posts.forEach(item => {\n        if (item._id == action.payload.id) {\n          return null;\n        } else return item;\n      });\n    }\n\n  }\n});\nexport const {\n  getPostsReducer,\n  createPostReducer,\n  updatePostReducer,\n  deletePostReducer\n} = PostSlice.actions;\nexport default PostSlice.reducer;","map":{"version":3,"names":["createSlice","PostSlice","name","initialState","posts","reducers","getPostsReducer","state","action","payload","createPostReducer","push","updatePostReducer","map","post","_id","deletePostReducer","forEach","item","id","actions","reducer"],"sources":["D:/node/social-media-app/client/src/reducers/PostSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst PostSlice = createSlice({\r\n    name:\"posts\",\r\n    initialState: {\r\n        posts: []\r\n    },\r\n    reducers: {\r\n        getPostsReducer(state, action) {\r\n            state.posts = action.payload;\r\n        },\r\n        createPostReducer(state, action) {\r\n            state.posts.push(action.payload);          \r\n        },\r\n        updatePostReducer(state, action) {\r\n            state.posts.map((post) => post._id === action.payload._id ? action.payload : post)          \r\n        },\r\n        deletePostReducer(state, action) {\r\n//            state.posts.filter((post) => post._id  !== action.payload.id)\r\n            state.posts.forEach(\r\n                item=> {\r\n                    if(item._id == action.payload.id) {\r\n                        return null;\r\n                    } else \r\n                        return item;\r\n                }\r\n            );\r\n        }\r\n    }\r\n})\r\n\r\nexport const { getPostsReducer, createPostReducer, updatePostReducer, deletePostReducer } = PostSlice.actions;\r\n\r\nexport default PostSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAGA,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAC,OADqB;EAE1BC,YAAY,EAAE;IACVC,KAAK,EAAE;EADG,CAFY;EAK1BC,QAAQ,EAAE;IACNC,eAAe,CAACC,KAAD,EAAQC,MAAR,EAAgB;MAC3BD,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACC,OAArB;IACH,CAHK;;IAINC,iBAAiB,CAACH,KAAD,EAAQC,MAAR,EAAgB;MAC7BD,KAAK,CAACH,KAAN,CAAYO,IAAZ,CAAiBH,MAAM,CAACC,OAAxB;IACH,CANK;;IAONG,iBAAiB,CAACL,KAAD,EAAQC,MAAR,EAAgB;MAC7BD,KAAK,CAACH,KAAN,CAAYS,GAAZ,CAAiBC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaP,MAAM,CAACC,OAAP,CAAeM,GAA5B,GAAkCP,MAAM,CAACC,OAAzC,GAAmDK,IAA7E;IACH,CATK;;IAUNE,iBAAiB,CAACT,KAAD,EAAQC,MAAR,EAAgB;MACzC;MACYD,KAAK,CAACH,KAAN,CAAYa,OAAZ,CACIC,IAAI,IAAG;QACH,IAAGA,IAAI,CAACH,GAAL,IAAYP,MAAM,CAACC,OAAP,CAAeU,EAA9B,EAAkC;UAC9B,OAAO,IAAP;QACH,CAFD,MAGI,OAAOD,IAAP;MACP,CANL;IAQH;;EApBK;AALgB,CAAD,CAA7B;AA6BA,OAAO,MAAM;EAAEZ,eAAF;EAAmBI,iBAAnB;EAAsCE,iBAAtC;EAAyDI;AAAzD,IAA+Ef,SAAS,CAACmB,OAA/F;AAEP,eAAenB,SAAS,CAACoB,OAAzB"},"metadata":{},"sourceType":"module"}