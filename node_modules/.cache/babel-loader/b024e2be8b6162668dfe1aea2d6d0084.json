{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as api from '../../api/index';\nexport const fetchPostsThunk = createAsyncThunk(\"posts/getPosts\", async () => {\n  const {\n    data\n  } = await api.fetchPosts();\n  return data;\n});\nexport const createPost = createAsyncThunk(\"posts/getPosts\", async newPost => {\n  const {\n    data\n  } = await api.createPost(newPost);\n  return data;\n});\nexport const postsSlice = createSlice({\n  name: 'posts',\n  initialState: {\n    posts: []\n  },\n  reducers: {\n    getPosts: (state, action) => {},\n    InsertPost: (state, action) => {\n      state.posts.push(action.payload);\n    }\n  },\n  extraReducers: {\n    [getPosts.fulfilled]: (state, action) => {\n      state.posts = action.payload;\n    },\n    [getPosts.pending]: (state, action) => {},\n    [getPosts.rejected]: (state, action) => {}\n  }\n});\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","api","fetchPostsThunk","data","fetchPosts","createPost","newPost","postsSlice","name","initialState","posts","reducers","getPosts","state","action","InsertPost","push","payload","extraReducers","fulfilled","pending","rejected","reducer"],"sources":["D:/node/social-media-app/client/src/components/Posts/PostsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport * as api from '../../api/index';\r\n\r\nexport const fetchPostsThunk = createAsyncThunk(\"posts/getPosts\",\r\n    async () => {\r\n        const { data } = await api.fetchPosts();\r\n        return data;\r\n    }\r\n);\r\n\r\nexport const createPost = createAsyncThunk(\"posts/getPosts\",\r\n    async (newPost) => {\r\n        const { data } = await api.createPost(newPost);\r\n        return data;\r\n    }\r\n);\r\n\r\n\r\nexport const postsSlice = createSlice({\r\n  name: 'posts',\r\n  initialState: {\r\n    posts: [],\r\n  },\r\n  reducers: {\r\n    getPosts: (state, action) => {\r\n\r\n    },\r\n    InsertPost: (state, action) => {\r\n        state.posts.push(action.payload);\r\n    }\r\n  },\r\n  extraReducers: {\r\n    [getPosts.fulfilled]: (state, action) => {\r\n        state.posts = action.payload;\r\n    },\r\n    [getPosts.pending]: (state, action) => {\r\n    },\r\n    [getPosts.rejected]: (state, action) => {\r\n    }\r\n  }\r\n})\r\n\r\nexport default postsSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,OAAO,KAAKC,GAAZ,MAAqB,iBAArB;AAEA,OAAO,MAAMC,eAAe,GAAGF,gBAAgB,CAAC,gBAAD,EAC3C,YAAY;EACR,MAAM;IAAEG;EAAF,IAAW,MAAMF,GAAG,CAACG,UAAJ,EAAvB;EACA,OAAOD,IAAP;AACH,CAJ0C,CAAxC;AAOP,OAAO,MAAME,UAAU,GAAGL,gBAAgB,CAAC,gBAAD,EACtC,MAAOM,OAAP,IAAmB;EACf,MAAM;IAAEH;EAAF,IAAW,MAAMF,GAAG,CAACI,UAAJ,CAAeC,OAAf,CAAvB;EACA,OAAOH,IAAP;AACH,CAJqC,CAAnC;AAQP,OAAO,MAAMI,UAAU,GAAGR,WAAW,CAAC;EACpCS,IAAI,EAAE,OAD8B;EAEpCC,YAAY,EAAE;IACZC,KAAK,EAAE;EADK,CAFsB;EAKpCC,QAAQ,EAAE;IACRC,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB,CAE5B,CAHO;IAIRC,UAAU,EAAE,CAACF,KAAD,EAAQC,MAAR,KAAmB;MAC3BD,KAAK,CAACH,KAAN,CAAYM,IAAZ,CAAiBF,MAAM,CAACG,OAAxB;IACH;EANO,CAL0B;EAapCC,aAAa,EAAE;IACb,CAACN,QAAQ,CAACO,SAAV,GAAsB,CAACN,KAAD,EAAQC,MAAR,KAAmB;MACrCD,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACG,OAArB;IACH,CAHY;IAIb,CAACL,QAAQ,CAACQ,OAAV,GAAoB,CAACP,KAAD,EAAQC,MAAR,KAAmB,CACtC,CALY;IAMb,CAACF,QAAQ,CAACS,QAAV,GAAqB,CAACR,KAAD,EAAQC,MAAR,KAAmB,CACvC;EAPY;AAbqB,CAAD,CAA9B;AAwBP,eAAeP,UAAU,CAACe,OAA1B"},"metadata":{},"sourceType":"module"}