{"ast":null,"code":"import * as API from '../api/index';\nexport const fetchPosts = () => async dispatch => {\n  const {\n    data\n  } = await API.getPosts();\n  dispatch({\n    type: 'posts/fetchingPosts',\n    payload: data\n  });\n};\nexport const createPost = newPost => async dispatch => {\n  const {\n    data\n  } = await API.createPost(newPost);\n  dispatch({\n    type: 'posts/postCreated',\n    payload: data\n  });\n};\nexport const updatePost = (currentId, post) => async dispatch => {\n  const {\n    data\n  } = await API.updatePost(currentId, post);\n  dispatch({\n    type: 'posts/postUpdated',\n    payload: data\n  });\n};\nexport const deletePost = postId => async dispatch => {\n  await API.deletePost(postId);\n  dispatch({\n    type: 'posts/postDeleted',\n    payload: postId\n  });\n};\nexport const likePost = postId => async dispatch => {\n  const {\n    data\n  } = await API.likePost(postId);\n  dispatch({\n    type: 'posts/postLiked',\n    payload: data\n  });\n};\nexport const signIn = (formData, navigateTo) => async dispatch => {\n  try {\n    const {\n      data\n    } = await API.signIn(formData);\n    dispatch({\n      type: 'auth/userLoggedIn',\n      payload: data\n    });\n    navigateTo('/post');\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const signUp = (formData, navigateTo) => async dispatch => {\n  try {\n    const {\n      data\n    } = await API.signUp(formData);\n    dispatch({\n      type: 'auth/userSignedUp',\n      payload: data\n    });\n    navigateTo('/post');\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const logout = () => async dispatch => {\n  try {\n    dispatch({\n      type: 'auth/userLoggedOut'\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["API","fetchPosts","dispatch","data","getPosts","type","payload","createPost","newPost","updatePost","currentId","post","deletePost","postId","likePost","signIn","formData","navigateTo","error","console","log","signUp","logout"],"sources":["D:/projects/social-media-app/client/src/actions/actions.js"],"sourcesContent":["import * as API  from '../api/index';\r\n\r\nexport const fetchPosts = () => async (dispatch) => {\r\n    const { data } = await API.getPosts();\r\n    dispatch({type: 'posts/fetchingPosts', payload: data});\r\n}\r\n  \r\nexport const createPost = (newPost) => async (dispatch) => {\r\n    const {data}  = await API.createPost(newPost);\r\n    dispatch({ type: 'posts/postCreated', payload: data });    \r\n}\r\n\r\nexport const updatePost = (currentId, post) => async (dispatch) => {\r\n    const { data } = await API.updatePost(currentId, post);\r\n    dispatch({ type: 'posts/postUpdated', payload: data });\r\n}\r\n\r\nexport const deletePost = (postId) => async (dispatch) => {\r\n    await API.deletePost(postId);\r\n    dispatch({ type: 'posts/postDeleted', payload: postId });    \r\n}\r\n\r\nexport const likePost = (postId) => async (dispatch) => {\r\n    const { data } = await API.likePost(postId);\r\n    dispatch({ type: 'posts/postLiked', payload: data });\r\n}\r\n\r\nexport const signIn = (formData, navigateTo) => async (dispatch) => {\r\n    try {\r\n        const {data} = await API.signIn(formData);\r\n        dispatch({ type: 'auth/userLoggedIn', payload:data });\r\n        navigateTo('/post');    \r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n \r\nexport const signUp = (formData, navigateTo) => async (dispatch) => {\r\n    try {\r\n        const { data } = await API.signUp(formData);\r\n        dispatch({ type: 'auth/userSignedUp', payload: data})\r\n        navigateTo('/post');\r\n    \r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    try {\r\n        dispatch({type: 'auth/userLoggedOut'});\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAO,cAAc;AAEpC,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAOC,QAAQ,IAAK;EAChD,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMH,GAAG,CAACI,QAAQ,EAAE;EACrCF,QAAQ,CAAC;IAACG,IAAI,EAAE,qBAAqB;IAAEC,OAAO,EAAEH;EAAI,CAAC,CAAC;AAC1D,CAAC;AAED,OAAO,MAAMI,UAAU,GAAIC,OAAO,IAAK,MAAON,QAAQ,IAAK;EACvD,MAAM;IAACC;EAAI,CAAC,GAAI,MAAMH,GAAG,CAACO,UAAU,CAACC,OAAO,CAAC;EAC7CN,QAAQ,CAAC;IAAEG,IAAI,EAAE,mBAAmB;IAAEC,OAAO,EAAEH;EAAK,CAAC,CAAC;AAC1D,CAAC;AAED,OAAO,MAAMM,UAAU,GAAG,CAACC,SAAS,EAAEC,IAAI,KAAK,MAAOT,QAAQ,IAAK;EAC/D,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMH,GAAG,CAACS,UAAU,CAACC,SAAS,EAAEC,IAAI,CAAC;EACtDT,QAAQ,CAAC;IAAEG,IAAI,EAAE,mBAAmB;IAAEC,OAAO,EAAEH;EAAK,CAAC,CAAC;AAC1D,CAAC;AAED,OAAO,MAAMS,UAAU,GAAIC,MAAM,IAAK,MAAOX,QAAQ,IAAK;EACtD,MAAMF,GAAG,CAACY,UAAU,CAACC,MAAM,CAAC;EAC5BX,QAAQ,CAAC;IAAEG,IAAI,EAAE,mBAAmB;IAAEC,OAAO,EAAEO;EAAO,CAAC,CAAC;AAC5D,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAID,MAAM,IAAK,MAAOX,QAAQ,IAAK;EACpD,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMH,GAAG,CAACc,QAAQ,CAACD,MAAM,CAAC;EAC3CX,QAAQ,CAAC;IAAEG,IAAI,EAAE,iBAAiB;IAAEC,OAAO,EAAEH;EAAK,CAAC,CAAC;AACxD,CAAC;AAED,OAAO,MAAMY,MAAM,GAAG,CAACC,QAAQ,EAAEC,UAAU,KAAK,MAAOf,QAAQ,IAAK;EAChE,IAAI;IACA,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMH,GAAG,CAACe,MAAM,CAACC,QAAQ,CAAC;IACzCd,QAAQ,CAAC;MAAEG,IAAI,EAAE,mBAAmB;MAAEC,OAAO,EAACH;IAAK,CAAC,CAAC;IACrDc,UAAU,CAAC,OAAO,CAAC;EACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMG,MAAM,GAAG,CAACL,QAAQ,EAAEC,UAAU,KAAK,MAAOf,QAAQ,IAAK;EAChE,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,GAAG,CAACqB,MAAM,CAACL,QAAQ,CAAC;IAC3Cd,QAAQ,CAAC;MAAEG,IAAI,EAAE,mBAAmB;MAAEC,OAAO,EAAEH;IAAI,CAAC,CAAC;IACrDc,UAAU,CAAC,OAAO,CAAC;EAEvB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMI,MAAM,GAAG,MAAM,MAAOpB,QAAQ,IAAK;EAC5C,IAAI;IACAA,QAAQ,CAAC;MAACG,IAAI,EAAE;IAAoB,CAAC,CAAC;EAC1C,CAAC,CAAC,OAAOa,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC"},"metadata":{},"sourceType":"module"}