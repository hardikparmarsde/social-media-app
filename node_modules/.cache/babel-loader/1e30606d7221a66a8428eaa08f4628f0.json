{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nvar PostSlice = createSlice({\n  name: \"posts\",\n  initialState: {\n    posts: []\n  },\n  reducers: {\n    fetchingPosts: function fetchingPosts(state, action) {\n      state.posts = action.payload;\n    },\n    postCreated: function postCreated(state, action) {\n      state.posts.push(action.payload);\n    },\n    postUpdated: function postUpdated(state, action) {\n      state.posts.map(function (post) {\n        return post._id === action.payload ? action.payload : post;\n      });\n    },\n    postDeleted: function postDeleted(state, action) {\n      state.posts.filter(function (post) {\n        return post._id !== action.payload.id;\n      });\n    }\n  }\n});\nvar _PostSlice$actions = PostSlice.actions,\n    fetchingPosts = _PostSlice$actions.fetchingPosts,\n    postAdded = _PostSlice$actions.postAdded,\n    postDeleted = _PostSlice$actions.postDeleted,\n    postUpdated = _PostSlice$actions.postUpdated;\nexport { fetchingPosts, postAdded, postDeleted, postUpdated };\nexport default PostSlice.reducer;","map":{"version":3,"names":["createSlice","PostSlice","name","initialState","posts","reducers","fetchingPosts","state","action","payload","postCreated","push","postUpdated","map","post","_id","postDeleted","filter","id","actions","postAdded","reducer"],"sources":["D:/node/social-media-app/client/src/components/Posts/PostSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst PostSlice = createSlice({\r\n    name:\"posts\",\r\n    initialState: {\r\n        posts: []\r\n    },\r\n    reducers: {\r\n        fetchingPosts(state, action) {\r\n            state.posts = action.payload;\r\n        },\r\n        postCreated(state, action) {\r\n            state.posts.push(action.payload);          \r\n        },\r\n        postUpdated(state, action) {\r\n            state.posts.map((post) => post._id === action.payload ? action.payload : post);          \r\n        },\r\n        postDeleted(state, action) {\r\n            state.posts.filter((post) => post._id  !== action.payload.id);\r\n        }\r\n    }\r\n})\r\n\r\nexport const { fetchingPosts, postAdded, postDeleted, postUpdated } = PostSlice.actions;\r\n\r\nexport default PostSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAGA,IAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAC,OADqB;EAE1BC,YAAY,EAAE;IACVC,KAAK,EAAE;EADG,CAFY;EAK1BC,QAAQ,EAAE;IACNC,aADM,yBACQC,KADR,EACeC,MADf,EACuB;MACzBD,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACC,OAArB;IACH,CAHK;IAINC,WAJM,uBAIMH,KAJN,EAIaC,MAJb,EAIqB;MACvBD,KAAK,CAACH,KAAN,CAAYO,IAAZ,CAAiBH,MAAM,CAACC,OAAxB;IACH,CANK;IAONG,WAPM,uBAOML,KAPN,EAOaC,MAPb,EAOqB;MACvBD,KAAK,CAACH,KAAN,CAAYS,GAAZ,CAAgB,UAACC,IAAD;QAAA,OAAUA,IAAI,CAACC,GAAL,KAAaP,MAAM,CAACC,OAApB,GAA8BD,MAAM,CAACC,OAArC,GAA+CK,IAAzD;MAAA,CAAhB;IACH,CATK;IAUNE,WAVM,uBAUMT,KAVN,EAUaC,MAVb,EAUqB;MACvBD,KAAK,CAACH,KAAN,CAAYa,MAAZ,CAAmB,UAACH,IAAD;QAAA,OAAUA,IAAI,CAACC,GAAL,KAAcP,MAAM,CAACC,OAAP,CAAeS,EAAvC;MAAA,CAAnB;IACH;EAZK;AALgB,CAAD,CAA7B;yBAqBsEjB,SAAS,CAACkB,O;IAAjEb,a,sBAAAA,a;IAAec,S,sBAAAA,S;IAAWJ,W,sBAAAA,W;IAAaJ,W,sBAAAA,W;;AAEtD,eAAeX,SAAS,CAACoB,OAAzB"},"metadata":{},"sourceType":"module"}