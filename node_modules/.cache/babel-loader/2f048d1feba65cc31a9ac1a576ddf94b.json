{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst PostSlice = createSlice({\n  name: \"posts\",\n  initialState: {\n    posts: []\n  },\n  reducers: {\n    fetchingPosts(state, action) {\n      console.log('er here');\n      state.posts = action.payload;\n    },\n\n    postCreated(state, action) {\n      state.posts.push(action.payload);\n    },\n\n    postUpdated(state, action) {\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n    },\n\n    postDeleted(state, action) {\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== action.payload)\n      };\n    },\n\n    postLiked(state, action) {\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n    }\n\n  }\n});\nexport const {\n  fetchingPosts,\n  postAdded,\n  postDeleted,\n  postUpdated\n} = PostSlice.actions;\nexport default PostSlice.reducer;","map":{"version":3,"names":["createSlice","PostSlice","name","initialState","posts","reducers","fetchingPosts","state","action","console","log","payload","postCreated","push","postUpdated","map","post","_id","postDeleted","filter","postLiked","postAdded","actions","reducer"],"sources":["D:/node/social-media-app/client/src/slices/PostSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst PostSlice = createSlice({\r\n    name:\"posts\",\r\n    initialState: {\r\n        posts: []   \r\n    },\r\n    reducers: {\r\n        fetchingPosts(state, action) {\r\n            console.log('er here')\r\n            state.posts = action.payload;\r\n        },\r\n        postCreated(state, action) {\r\n            state.posts.push(action.payload)\r\n        },\r\n        postUpdated(state, action) {\r\n            return {\r\n               ...state, posts: state.posts.map((post) => post._id === action.payload._id ? action.payload : post)\r\n            }          \r\n        },\r\n        postDeleted(state, action) {\r\n            return { ...state, posts: state.posts.filter((post) => post._id  !== action.payload) }\r\n        },\r\n        postLiked(state, action) {\r\n            return {\r\n                ...state, posts: state.posts.map((post) => post._id === action.payload._id ? action.payload : post)\r\n             }          \r\n         }\r\n    }\r\n})\r\n\r\nexport const { fetchingPosts, postAdded, postDeleted, postUpdated } = PostSlice.actions;\r\n\r\nexport default PostSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAGA,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAC,OADqB;EAE1BC,YAAY,EAAE;IACVC,KAAK,EAAE;EADG,CAFY;EAK1BC,QAAQ,EAAE;IACNC,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACzBC,OAAO,CAACC,GAAR,CAAY,SAAZ;MACAH,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACG,OAArB;IACH,CAJK;;IAKNC,WAAW,CAACL,KAAD,EAAQC,MAAR,EAAgB;MACvBD,KAAK,CAACH,KAAN,CAAYS,IAAZ,CAAiBL,MAAM,CAACG,OAAxB;IACH,CAPK;;IAQNG,WAAW,CAACP,KAAD,EAAQC,MAAR,EAAgB;MACvB,OAAO,EACJ,GAAGD,KADC;QACMH,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYW,GAAZ,CAAiBC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaT,MAAM,CAACG,OAAP,CAAeM,GAA5B,GAAkCT,MAAM,CAACG,OAAzC,GAAmDK,IAA7E;MADb,CAAP;IAGH,CAZK;;IAaNE,WAAW,CAACX,KAAD,EAAQC,MAAR,EAAgB;MACvB,OAAO,EAAE,GAAGD,KAAL;QAAYH,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYe,MAAZ,CAAoBH,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAcT,MAAM,CAACG,OAAlD;MAAnB,CAAP;IACH,CAfK;;IAgBNS,SAAS,CAACb,KAAD,EAAQC,MAAR,EAAgB;MACrB,OAAO,EACH,GAAGD,KADA;QACOH,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYW,GAAZ,CAAiBC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaT,MAAM,CAACG,OAAP,CAAeM,GAA5B,GAAkCT,MAAM,CAACG,OAAzC,GAAmDK,IAA7E;MADd,CAAP;IAGF;;EApBI;AALgB,CAAD,CAA7B;AA6BA,OAAO,MAAM;EAAEV,aAAF;EAAiBe,SAAjB;EAA4BH,WAA5B;EAAyCJ;AAAzC,IAAyDb,SAAS,CAACqB,OAAzE;AAEP,eAAerB,SAAS,CAACsB,OAAzB"},"metadata":{},"sourceType":"module"}