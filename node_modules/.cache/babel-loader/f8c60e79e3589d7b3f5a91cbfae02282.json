{"ast":null,"code":"var _jsxFileName = \"D:\\\\node\\\\social-media-app\\\\client\\\\src\\\\components\\\\pagination.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport ReactPaginate from 'react-paginate';\nimport { useSelector } from 'react-redux';\nimport Posts from './Posts/posts'; // Example items, to simulate fetching from another resources.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nexport const PaginatedItems = _ref => {\n  _s();\n\n  let {\n    itemsPerPage,\n    currentId\n  } = _ref;\n  const posts = useSelector(state => state.posts.posts); // We start with an empty list of items.\n\n  const [currentItems, setCurrentItems] = useState(null);\n  const [pageCount, setPageCount] = useState(0); // Here we use item offsets; we could also use page offsets\n  // following the API or data you're working with.\n\n  const [itemOffset, setItemOffset] = useState(posts);\n  useEffect(() => {\n    // Fetch items from another resources.\n    const endOffset = itemOffset + itemsPerPage;\n    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n    setCurrentItems(items.slice(itemOffset, endOffset));\n    setPageCount(Math.ceil(items.length / itemsPerPage));\n  }, [itemOffset, itemsPerPage]); // Invoke when user click to request another page.\n\n  const handlePageClick = event => {\n    const newOffset = event.selected * itemsPerPage % items.length;\n    console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n    setItemOffset(newOffset);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Posts, {\n      posts: currentItems,\n      currentId: currentId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      breakLabel: \"...\",\n      nextLabel: \"next >\",\n      onPageChange: handlePageClick,\n      pageRangeDisplayed: 5,\n      pageCount: pageCount,\n      previousLabel: \"< previous\",\n      renderOnZeroPageCount: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PaginatedItems, \"SuxnTvoN4kUs2xwTzleGg4voQiE=\", false, function () {\n  return [useSelector];\n});\n\n_c = PaginatedItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaginatedItems\");","map":{"version":3,"names":["React","useState","useEffect","ReactPaginate","useSelector","Posts","items","PaginatedItems","itemsPerPage","currentId","posts","state","currentItems","setCurrentItems","pageCount","setPageCount","itemOffset","setItemOffset","endOffset","console","log","slice","Math","ceil","length","handlePageClick","event","newOffset","selected"],"sources":["D:/node/social-media-app/client/src/components/pagination.js"],"sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\nimport { useSelector } from 'react-redux';\r\nimport Posts from './Posts/posts';\r\n// Example items, to simulate fetching from another resources.\r\nconst items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\r\n\r\n\r\nexport const PaginatedItems = ({ itemsPerPage, currentId }) => {\r\n  const posts = useSelector(state => state.posts.posts);\r\n  // We start with an empty list of items.\r\n  const [currentItems, setCurrentItems] = useState(null);\r\n  const [pageCount, setPageCount] = useState(0);\r\n  // Here we use item offsets; we could also use page offsets\r\n  // following the API or data you're working with.\r\n  const [itemOffset, setItemOffset] = useState(posts);\r\n\r\n  useEffect(() => {\r\n    // Fetch items from another resources.\r\n    const endOffset = itemOffset + itemsPerPage;\r\n    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n    setCurrentItems(items.slice(itemOffset, endOffset));\r\n    setPageCount(Math.ceil(items.length / itemsPerPage));\r\n  }, [itemOffset, itemsPerPage]);\r\n\r\n  // Invoke when user click to request another page.\r\n  const handlePageClick = (event) => {\r\n    const newOffset = (event.selected * itemsPerPage) % items.length;\r\n    console.log(\r\n      `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n    );\r\n    setItemOffset(newOffset);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Posts posts={currentItems} currentId={currentId} />\r\n      <ReactPaginate\r\n        breakLabel=\"...\"\r\n        nextLabel=\"next >\"\r\n        onPageChange={handlePageClick}\r\n        pageRangeDisplayed={5}\r\n        pageCount={pageCount}\r\n        previousLabel=\"< previous\"\r\n        renderOnZeroPageCount={null}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,eAAlB,C,CACA;;;;AACA,MAAMC,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC,EAAwC,EAAxC,EAA4C,EAA5C,CAAd;AAGA,OAAO,MAAMC,cAAc,GAAG,QAAiC;EAAA;;EAAA,IAAhC;IAAEC,YAAF;IAAgBC;EAAhB,CAAgC;EAC7D,MAAMC,KAAK,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,KAAN,CAAYA,KAAtB,CAAzB,CAD6D,CAE7D;;EACA,MAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,IAAD,CAAhD;EACA,MAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,CAAD,CAA1C,CAJ6D,CAK7D;EACA;;EACA,MAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAACS,KAAD,CAA5C;EAEAR,SAAS,CAAC,MAAM;IACd;IACA,MAAMgB,SAAS,GAAGF,UAAU,GAAGR,YAA/B;IACAW,OAAO,CAACC,GAAR,CAAa,sBAAqBJ,UAAW,OAAME,SAAU,EAA7D;IACAL,eAAe,CAACP,KAAK,CAACe,KAAN,CAAYL,UAAZ,EAAwBE,SAAxB,CAAD,CAAf;IACAH,YAAY,CAACO,IAAI,CAACC,IAAL,CAAUjB,KAAK,CAACkB,MAAN,GAAehB,YAAzB,CAAD,CAAZ;EACD,CANQ,EAMN,CAACQ,UAAD,EAAaR,YAAb,CANM,CAAT,CAT6D,CAiB7D;;EACA,MAAMiB,eAAe,GAAIC,KAAD,IAAW;IACjC,MAAMC,SAAS,GAAID,KAAK,CAACE,QAAN,GAAiBpB,YAAlB,GAAkCF,KAAK,CAACkB,MAA1D;IACAL,OAAO,CAACC,GAAR,CACG,8BAA6BM,KAAK,CAACE,QAAS,qBAAoBD,SAAU,EAD7E;IAGAV,aAAa,CAACU,SAAD,CAAb;EACD,CAND;;EAQA,oBACE;IAAA,wBACE,QAAC,KAAD;MAAO,KAAK,EAAEf,YAAd;MAA4B,SAAS,EAAEH;IAAvC;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,aAAD;MACE,UAAU,EAAC,KADb;MAEE,SAAS,EAAC,QAFZ;MAGE,YAAY,EAAEgB,eAHhB;MAIE,kBAAkB,EAAE,CAJtB;MAKE,SAAS,EAAEX,SALb;MAME,aAAa,EAAC,YANhB;MAOE,qBAAqB,EAAE;IAPzB;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAcD,CAxCM;;GAAMP,c;UACGH,W;;;KADHG,c"},"metadata":{},"sourceType":"module"}